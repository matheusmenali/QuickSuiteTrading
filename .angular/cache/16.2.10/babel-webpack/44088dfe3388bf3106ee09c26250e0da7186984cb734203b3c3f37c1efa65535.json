{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/movies-service\";\nimport * as i3 from \"@angular/common\";\nfunction DashComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 1)(1, \"li\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Title: \", movie_r1.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", movie_r1.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Duration: \", movie_r1.duration, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Genre: \", movie_r1.genre, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Rating: \", movie_r1.reting, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Released date: \", movie_r1.releasedDate, \"\");\n  }\n}\nexport class DashComponent {\n  constructor(fb, moviesService) {\n    this.fb = fb;\n    this.moviesService = moviesService;\n  }\n  ngOnInit() {\n    this.createForm();\n    this.moviesService.getMovies().subscribe(response => {\n      this.moviesList = response;\n      // Faça qualquer manipulação adicional aqui, se necessário\n    }, error => {\n      console.error('Erro ao obter o array de dados falsos:', error);\n    });\n  }\n  createForm() {\n    this.moviesListForm = this.fb.group({\n      nome: ['', Validators.required],\n      empresa: ['', [Validators.required]],\n      formato: ['', [Validators.required]],\n      tipo: [''],\n      status: ['', [Validators.required]],\n      tipoVeiculo: ['', [Validators.required]],\n      dataInicial: ['', [Validators.required]],\n      dataFinal: ['', [Validators.required]]\n    });\n  }\n  getMoviesData() {}\n  static #_ = this.ɵfac = function DashComponent_Factory(t) {\n    return new (t || DashComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MoviesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashComponent,\n    selectors: [[\"app-dash\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[\"id\", \"movies-list\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"movies-list\"]],\n    template: function DashComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Quick Suit TRaining Films\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, DashComponent_ul_3_Template, 14, 6, \"ul\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.moviesList);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","movie_r1","title","description","duration","genre","reting","releasedDate","DashComponent","constructor","fb","moviesService","ngOnInit","createForm","getMovies","subscribe","response","moviesList","error","console","moviesListForm","group","nome","required","empresa","formato","tipo","status","tipoVeiculo","dataInicial","dataFinal","getMoviesData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","MoviesService","_2","selectors","decls","vars","consts","template","DashComponent_Template","rf","ctx","ɵɵtemplate","DashComponent_ul_3_Template","ɵɵproperty"],"sources":["C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\dash\\dash.component.ts","C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\dash\\dash.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MoviesService } from 'src/app/services/movies-service';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.less'],\n})\nexport class DashComponent implements OnInit {\n  moviesListForm!: FormGroup;\n  moviesList!: any[];\n\n  constructor(private fb: FormBuilder, private moviesService: MoviesService) {}\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.moviesService.getMovies().subscribe(\n      (response) => {\n        this.moviesList = response;\n        // Faça qualquer manipulação adicional aqui, se necessário\n      },\n      (error) => {\n        console.error('Erro ao obter o array de dados falsos:', error);\n      }\n    );\n  }\n\n  createForm(): void {\n    this.moviesListForm = this.fb.group({\n      nome: ['', Validators.required],\n      empresa: ['', [Validators.required]],\n      formato: ['', [Validators.required]],\n      tipo: [''],\n      status: ['', [Validators.required]],\n      tipoVeiculo: ['', [Validators.required]],\n      dataInicial: ['', [Validators.required]],\n      dataFinal: ['', [Validators.required]],\n    });\n  }\n\n  getMoviesData() {}\n}\n","<body>\n  <h1>Quick Suit TRaining Films</h1>\n\n  <ul id=\"movies-list\" *ngFor=\"let movie of moviesList\">\n    <li>\n      <h2>Title: {{ movie.title }}</h2>\n      <p>Description: {{ movie.description }}</p>\n      <p>Duration: {{ movie.duration }}</p>\n      <p>Genre: {{ movie.genre }}</p>\n      <p>Rating: {{ movie.reting }}</p>\n      <p>Released date: {{ movie.releasedDate }}</p>\n    </li>\n  </ul>\n</body>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICEjEC,EAAA,CAAAC,cAAA,YAAsD;IAE9CD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC3CH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA8B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACrCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC/BH,EAAA,CAAAC,cAAA,SAAG;IAAAD,EAAA,CAAAE,MAAA,IAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACjCH,EAAA,CAAAC,cAAA,SAAG;IAAAD,EAAA,CAAAE,MAAA,IAAuC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAL1CH,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAK,kBAAA,YAAAC,QAAA,CAAAC,KAAA,KAAwB;IACzBP,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,kBAAA,kBAAAC,QAAA,CAAAE,WAAA,KAAoC;IACpCR,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,kBAAA,eAAAC,QAAA,CAAAG,QAAA,KAA8B;IAC9BT,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAK,kBAAA,YAAAC,QAAA,CAAAI,KAAA,KAAwB;IACxBV,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,kBAAA,aAAAC,QAAA,CAAAK,MAAA,KAA0B;IAC1BX,EAAA,CAAAI,SAAA,GAAuC;IAAvCJ,EAAA,CAAAK,kBAAA,oBAAAC,QAAA,CAAAM,YAAA,KAAuC;;;ADDhD,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,EAAe,EAAUC,aAA4B;IAArD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,aAAa,GAAbA,aAAa;EAAkB;EAE5EC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;IAEjB,IAAI,CAACF,aAAa,CAACG,SAAS,EAAE,CAACC,SAAS,CACrCC,QAAQ,IAAI;MACX,IAAI,CAACC,UAAU,GAAGD,QAAQ;MAC1B;IACF,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CACF;EACH;EAEAL,UAAUA,CAAA;IACR,IAAI,CAACO,cAAc,GAAG,IAAI,CAACV,EAAE,CAACW,KAAK,CAAC;MAClCC,IAAI,EAAE,CAAC,EAAE,EAAE5B,UAAU,CAAC6B,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC9B,UAAU,CAAC6B,QAAQ,CAAC,CAAC;MACpCE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC/B,UAAU,CAAC6B,QAAQ,CAAC,CAAC;MACpCG,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACjC,UAAU,CAAC6B,QAAQ,CAAC,CAAC;MACnCK,WAAW,EAAE,CAAC,EAAE,EAAE,CAAClC,UAAU,CAAC6B,QAAQ,CAAC,CAAC;MACxCM,WAAW,EAAE,CAAC,EAAE,EAAE,CAACnC,UAAU,CAAC6B,QAAQ,CAAC,CAAC;MACxCO,SAAS,EAAE,CAAC,EAAE,EAAE,CAACpC,UAAU,CAAC6B,QAAQ,CAAC;KACtC,CAAC;EACJ;EAEAQ,aAAaA,CAAA,GAAI;EAAC,QAAAC,CAAA,G;qBAjCPxB,aAAa,EAAAb,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb9B,aAAa;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1BlD,EAAA,CAAAC,cAAA,WAAM;QACAD,EAAA,CAAAE,MAAA,gCAAyB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAElCH,EAAA,CAAAoD,UAAA,IAAAC,2BAAA,iBASK;QACPrD,EAAA,CAAAG,YAAA,EAAO;;;QAVkCH,EAAA,CAAAI,SAAA,GAAa;QAAbJ,EAAA,CAAAsD,UAAA,YAAAH,GAAA,CAAA7B,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}