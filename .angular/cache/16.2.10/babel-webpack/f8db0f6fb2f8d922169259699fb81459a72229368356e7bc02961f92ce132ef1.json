{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/movies-service\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nfunction DashComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", movie_r1.imagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Title: \", movie_r1.title, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, movie_r1), \"\\n\");\n  }\n}\nexport class DashComponent {\n  constructor(fb, moviesService, sanitizer) {\n    this.fb = fb;\n    this.moviesService = moviesService;\n    this.sanitizer = sanitizer;\n    this.moviesList = [];\n  }\n  ngOnInit() {\n    // this.createForm();\n    this.moviesService.getMovies().subscribe(response => {\n      response.forEach(movie => {\n        movie.imagePath = this.getImagePath(movie.title);\n        this.moviesList.push(movie);\n      });\n    }, error => {\n      console.error('Erro ao obter o array de dados falsos:', error);\n    });\n  }\n  // createForm(): void {\n  //   this.moviesListForm = this.fb.group({\n  //     nome: ['', Validators.required],\n  //     empresa: ['', [Validators.required]],\n  //     formato: ['', [Validators.required]],\n  //     tipo: [''],\n  //     status: ['', [Validators.required]],\n  //     tipoVeiculo: ['', [Validators.required]],\n  //     dataInicial: ['', [Validators.required]],\n  //     dataFinal: ['', [Validators.required]],\n  //   });\n  // }\n  getImagePath(movieUrl) {\n    let urlSplited = movieUrl.split(' ');\n    return `/assets/images/${urlSplited[0]}.png`;\n  }\n  getMoviesData() {}\n  static #_ = this.ɵfac = function DashComponent_Factory(t) {\n    return new (t || DashComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MoviesService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashComponent,\n    selectors: [[\"app-dash\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[\"class\", \"movie\", 4, \"ngFor\", \"ngForOf\"], [1, \"movie\"], [\"width\", \"50\", 3, \"src\"]],\n    template: function DashComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Quick Suit Training Films\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, DashComponent_div_3_Template, 6, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.moviesList);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.JsonPipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\n  font-family: Arial, sans-serif;\\n  margin: 20px;\\n}\\nheader[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 20px;\\n  background-color: #333;\\n  color: #fff;\\n}\\nmain[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n.movie[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  padding: 20px;\\n  margin-bottom: 20px;\\n}\\niframe[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 400px;\\n}\\n.text-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoL2Rhc2guY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBQTtFQUNBLFlBQUE7QUFDRjtBQUVBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0FBQUY7QUFHQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQURGO0FBSUE7RUFDRSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQUZGO0FBS0E7RUFDRSxXQUFBO0VBQ0EsYUFBQTtBQUhGO0FBTUE7RUFDRSxrQkFBQTtBQUpGIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG5oZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5tYWluIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5tb3ZpZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmlmcmFtZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQwMHB4O1xufVxuXG4udGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","movie_r1","imagePath","ɵɵsanitizeUrl","ɵɵtextInterpolate1","title","ɵɵpipeBind1","DashComponent","constructor","fb","moviesService","sanitizer","moviesList","ngOnInit","getMovies","subscribe","response","forEach","movie","getImagePath","push","error","console","movieUrl","urlSplited","split","getMoviesData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","MoviesService","i3","DomSanitizer","_2","selectors","decls","vars","consts","template","DashComponent_Template","rf","ctx","ɵɵtemplate","DashComponent_div_3_Template"],"sources":["C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\dash\\dash.component.ts","C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\dash\\dash.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MoviesService } from 'src/app/services/movies-service';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.less'],\n})\nexport class DashComponent implements OnInit {\n  moviesListForm!: FormGroup;\n  moviesList: any = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private moviesService: MoviesService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit(): void {\n    // this.createForm();\n\n    this.moviesService.getMovies().subscribe(\n      (response) => {\n        response.forEach((movie: any) => {\n          movie.imagePath = this.getImagePath(movie.title);\n          this.moviesList.push(movie);\n        });\n      },\n      (error) => {\n        console.error('Erro ao obter o array de dados falsos:', error);\n      }\n    );\n  }\n\n  // createForm(): void {\n  //   this.moviesListForm = this.fb.group({\n  //     nome: ['', Validators.required],\n  //     empresa: ['', [Validators.required]],\n  //     formato: ['', [Validators.required]],\n  //     tipo: [''],\n  //     status: ['', [Validators.required]],\n  //     tipoVeiculo: ['', [Validators.required]],\n  //     dataInicial: ['', [Validators.required]],\n  //     dataFinal: ['', [Validators.required]],\n  //   });\n  // }\n\n  getImagePath(movieUrl: string) {\n    let urlSplited = movieUrl.split(' ');\n    return `/assets/images/${urlSplited[0]}.png`;\n  }\n\n  getMoviesData() {}\n}\n","<header>\n  <h1>Quick Suit Training Films</h1>\n</header>\n\n<div class=\"movie\" *ngFor=\"let movie of moviesList\">\n  <img [src]=\"movie.imagePath\" width=\"50\" />\n  <h2>Title: {{ movie.title }}</h2>\n  <!-- <p>Description: {{ movie.description }}</p>\n    <p>Duration: {{ movie.duration }}</p>\n    <p>Genre: {{ movie.genre }}</p>\n    <p>Rating: {{ movie.reting }}</p>\n    <p>Released date: {{ movie.releasedDate }}</p> -->\n  {{ movie | json }}\n</div>\n"],"mappings":";;;;;;;ICIAA,EAAA,CAAAC,cAAA,aAAoD;IAClDD,EAAA,CAAAE,SAAA,aAA0C;IAC1CF,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,GAAwB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAMjCJ,EAAA,CAAAG,MAAA,GACF;;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;IARCJ,EAAA,CAAAK,SAAA,GAAuB;IAAvBL,EAAA,CAAAM,UAAA,QAAAC,QAAA,CAAAC,SAAA,EAAAR,EAAA,CAAAS,aAAA,CAAuB;IACxBT,EAAA,CAAAK,SAAA,GAAwB;IAAxBL,EAAA,CAAAU,kBAAA,YAAAH,QAAA,CAAAI,KAAA,KAAwB;IAM5BX,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAU,kBAAA,MAAAV,EAAA,CAAAY,WAAA,OAAAL,QAAA,QACF;;;ADHA,OAAM,MAAOM,aAAa;EAIxBC,YACUC,EAAe,EACfC,aAA4B,EAC5BC,SAAuB;IAFvB,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,SAAS,GAATA,SAAS;IALnB,KAAAC,UAAU,GAAQ,EAAE;EAMjB;EAEHC,QAAQA,CAAA;IACN;IAEA,IAAI,CAACH,aAAa,CAACI,SAAS,EAAE,CAACC,SAAS,CACrCC,QAAQ,IAAI;MACXA,QAAQ,CAACC,OAAO,CAAEC,KAAU,IAAI;QAC9BA,KAAK,CAAChB,SAAS,GAAG,IAAI,CAACiB,YAAY,CAACD,KAAK,CAACb,KAAK,CAAC;QAChD,IAAI,CAACO,UAAU,CAACQ,IAAI,CAACF,KAAK,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC,EACAG,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CACF;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAF,YAAYA,CAACI,QAAgB;IAC3B,IAAIC,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACpC,OAAO,kBAAkBD,UAAU,CAAC,CAAC,CAAC,MAAM;EAC9C;EAEAE,aAAaA,CAAA,GAAI;EAAC,QAAAC,CAAA,G;qBA5CPpB,aAAa,EAAAb,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAApC,EAAA,CAAAkC,iBAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAtC,EAAA,CAAAkC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb5B,aAAa;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BhD,EAAA,CAAAC,cAAA,aAAQ;QACFD,EAAA,CAAAG,MAAA,gCAAyB;QAAAH,EAAA,CAAAI,YAAA,EAAK;QAGpCJ,EAAA,CAAAkD,UAAA,IAAAC,4BAAA,iBASM;;;QAT+BnD,EAAA,CAAAK,SAAA,GAAa;QAAbL,EAAA,CAAAM,UAAA,YAAA2C,GAAA,CAAA/B,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}