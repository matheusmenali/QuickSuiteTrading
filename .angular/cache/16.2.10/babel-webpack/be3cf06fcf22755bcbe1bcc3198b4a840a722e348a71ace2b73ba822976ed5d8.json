{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/movies-service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class MovieDetailsComponent {\n  constructor(route, moviesService, sanitizer) {\n    this.route = route;\n    this.moviesService = moviesService;\n    this.sanitizer = sanitizer;\n    this.movie = [];\n    this.trailerUrl = '';\n  }\n  ngOnInit() {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n    this.moviesService.getMovies().subscribe(response => {\n      this.movie = response[parseInt(this.movieId)];\n      this.movie['url'] = this.getTrailerPath(this.movie.trailerLink2);\n      // this.movie['url'] = this.getTrailerPath(this.movie.trailerLink);\n    }, error => {\n      console.error('Erro ao obter o array de dados falsos:', error);\n    });\n  }\n  getImagePath(movieTitle) {\n    let urlSplited = movieTitle.split(' ');\n    return `/assets/images/${urlSplited[0]}.png`;\n  }\n  getTrailerPath(url) {\n    // let urlSplited = url.split('=');\n    // this.trailerUrl = `https://www.youtube.com/embed/${urlSplited[1]}?rel=0`;\n    // return this.sanitizer.bypassSecurityTrustUrl(\n    //   `https://www.youtube.com/embed/${urlSplited[1]}?rel=0`\n    // );\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n  static #_ = this.ɵfac = function MovieDetailsComponent_Factory(t) {\n    return new (t || MovieDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MoviesService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieDetailsComponent,\n    selectors: [[\"app-movie-details\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"content\", \"row\"], [1, \"col-5\", \"image\"], [\"width\", \"400\", \"height\", \"600\", 3, \"src\"], [1, \"col-7\", \"description\"], [1, \"frame\"], [1, \"ratio\", \"ratio-4x3\"], [\"width\", \"400\", \"height\", \"400\", \"title\", \"YouTube video\", 3, \"src\"]],\n    template: function MovieDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵelement(3, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h2\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5);\n        i0.ɵɵelement(19, \"iframe\", 6);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.getImagePath(ctx.movie.title), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Title: \", ctx.movie.title, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Duration: \", ctx.movie.duration, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Genre: \", ctx.movie.genre, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Rating: \", ctx.movie.rating, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Release date: \", ctx.movie.releaseDate, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Description: \", ctx.movie.description, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.movie.url, i0.ɵɵsanitizeResourceUrl);\n      }\n    },\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n  margin: 0;\\n}\\n.content[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100vh;\\n  background-color: black;\\n  color: #fff;\\n}\\n.content[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.content[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%] {\\n  margin-top: 75px;\\n}\\n.content[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]   .frame[_ngcontent-%COMP%] {\\n  width: 400px;\\n  display: flex;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tb3ZpZS1kZXRhaWxzL21vdmllLWRldGFpbHMuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsWUFBQTtFQUNBLFNBQUE7QUFDRjtBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7QUFBRjtBQUpBO0VBT0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFBSjtBQVRBO0VBYUksZ0JBQUE7QUFESjtBQVpBO0VBZ0JNLFlBQUE7RUFDQSxhQUFBO0FBRE4iLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xufVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgY29sb3I6ICNmZmY7XG5cbiAgLmltYWdlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cblxuICAuZGVzY3JpcHRpb24ge1xuICAgIG1hcmdpbi10b3A6IDc1cHg7XG5cbiAgICAuZnJhbWUge1xuICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MovieDetailsComponent","constructor","route","moviesService","sanitizer","movie","trailerUrl","ngOnInit","movieId","snapshot","paramMap","get","getMovies","subscribe","response","parseInt","getTrailerPath","trailerLink2","error","console","getImagePath","movieTitle","urlSplited","split","url","bypassSecurityTrustUrl","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","MoviesService","i3","DomSanitizer","_2","selectors","decls","vars","consts","template","MovieDetailsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","title","ɵɵsanitizeUrl","ɵɵtextInterpolate1","duration","genre","rating","releaseDate","description","ɵɵsanitizeResourceUrl"],"sources":["C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\movie-details\\movie-details.component.ts","C:\\Users\\mathe\\Desktop\\Desenvolvimento\\quickSuite\\src\\app\\components\\movie-details\\movie-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MoviesService } from 'src/app/services/movies-service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.less'],\n})\nexport class MovieDetailsComponent implements OnInit {\n  movieId: any;\n  movie: any = [];\n  trailerUrl = '';\n  constructor(\n    private route: ActivatedRoute,\n    private moviesService: MoviesService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit(): void {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n\n    this.moviesService.getMovies().subscribe(\n      (response) => {\n        this.movie = response[parseInt(this.movieId)];\n        this.movie['url'] = this.getTrailerPath(this.movie.trailerLink2);\n        // this.movie['url'] = this.getTrailerPath(this.movie.trailerLink);\n      },\n      (error) => {\n        console.error('Erro ao obter o array de dados falsos:', error);\n      }\n    );\n  }\n\n  getImagePath(movieTitle: string) {\n    let urlSplited = movieTitle.split(' ');\n    return `/assets/images/${urlSplited[0]}.png`;\n  }\n\n  getTrailerPath(url: string): SafeUrl {\n    // let urlSplited = url.split('=');\n    // this.trailerUrl = `https://www.youtube.com/embed/${urlSplited[1]}?rel=0`;\n    // return this.sanitizer.bypassSecurityTrustUrl(\n    //   `https://www.youtube.com/embed/${urlSplited[1]}?rel=0`\n    // );\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n","<body>\n  <div class=\"content row\">\n    <div class=\"col-5 image\">\n      <img [src]=\"getImagePath(movie.title)\" width=\"400\" height=\"600\" />\n    </div>\n    <div class=\"col-7 description\">\n      <h2>Title: {{ movie.title }}</h2>\n      <p>Duration: {{ movie.duration }}</p>\n      <p>Genre: {{ movie.genre }}</p>\n      <p>Rating: {{ movie.rating }}</p>\n      <p>Release date: {{ movie.releaseDate }}</p>\n      <p>Description: {{ movie.description }}</p>\n      <div class=\"frame\">\n        <div class=\"ratio ratio-4x3\">\n          <iframe\n            width=\"400\"\n            height=\"400\"\n            [src]=\"movie.url\"\n            title=\"YouTube video\"\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}